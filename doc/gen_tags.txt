*gen_tags.txt* Async plugin for vim and neovim to ease the use of ctags/gtags.

Author: Jia Sui (https://github.com/jsfaint)
Repository: https://github.com/jsfaint/gen_tags.vim

==============================================================================
CONTENTS                                                 *gen_tags-contents*

1. Introduction ....................................... |gen_tags-introduction|
2. Usages ............................................. |gen_tags-usage|
3. Commands ........................................... |gen_tags-commands|
4. Mappings ........................................... |gen_tags-mapping|
5. Options ............................................ |gen_tags-options|

==============================================================================
1. Introduction                                         *gen_ctags-introduction*
Async plugin for Vim/NeoVim to ease the use of ctags/gtags
It is used for generate and maintain tags for you with multiple platform support, tested on Windows/Linux/macOS.

`gen_tags.vim` will detect git root and use it as the project root path.

Generate/Update ctags and gtags will run in background.

------------------------------------------------------------------------------
`gen_tags.vim` also provide a gtags completion source for
nvim-completion-manager(AKA NCM), it's optional, if you don't use ncm, just
ignore it :)

------------------------------------------------------------------------------
GNU global(aka gtags) is more powerful than ctags, which support definition,
reference, calling, called, include, string and etc.
But ctags only support definition.

As we can use GNU global why did I still support ctags in this plugin?
That's because GNU global only support 6 languages  natively.
`Supported Launages: C, C++, Yacc, Java, PHP4 and assembly`

ctags can support more languages(41 showed on the website).

Actually global can support more languages with Pygments plugin parser,
for more details please refer `PLUGIN_HOWTO.pygments` in global document.

==============================================================================
2. Usage                                                *gen_tags-usage*

GTAGS support the third-party library by set an environment variable `GTAGSLIBPATH`
But you can take a more straightforward way to do the same thing,
by create a symbol link of the library


* Linux/macOS
>
  ln -s /usr/include/ .
<

* Windows
>
  mklink /J include C:\TDM-GCC-32\include
<

==============================================================================
3. Commands                                             *gen_tags-commands*

------------------------------------------------------------------------------
* command fo ctags                                      *gen_tags-ctags*

:GenCtags                                               *:GenCtags*

Generate ctags database

:EditExt                                                *:EditExt*

Edit an extend configuration file for this project,
use for add third-party library ctags database
The extend database will be generate automatically.

:ClearCtags                                             *:ClearCtags*

`:ClearCtags`      Remove tags files.
`:ClearCtags!`     Remove tags files, ext.conf and the folder.

------------------------------------------------------------------------------
* command for gtags                                     *gen_tags-gtags*

:GenGTAGS                                               *:GenGTAGS*

Generate GTAGS

:ClearGTAGS                                             *:ClearGTAGS*

Clear GTAGS files

==============================================================================
4. Mappings                                             *gen_tags-mappings*

`ctrl+]` is the default mapping support by Vim for definition

The following mapping is set for GTAGS find function which use
cscope interface (`if_cscope`).
>
  Ctrl+\ c    Find functions calling this function
  Ctrl+\ d    Find functions called by this function
  Ctrl+\ e    Find this egrep pattern
  Ctrl+\ f    Find this file
  Ctrl+\ g    Find this definition
  Ctrl+\ i    Find files #including this file
  Ctrl+\ s    Find this C symbol
  Ctrl+\ t    Find this text string
<

==============================================================================
5. Options                                             *gen_tags-options*

------------------------------------------------------------------------------
g:loaded_gentags#ctags                           *g:loaded_gentags#ctags*

Set to 1 if you want to disable ctags support

------------------------------------------------------------------------------
g:loaded_gentags#gtags                           *g:loaded_gentags#gtags*

Set to 1 if you want to disable gtags support

------------------------------------------------------------------------------
g:gen_tags#ctags_bin                            *g:gen_tags#ctags_bin*

Set location of ctags. The default is 'ctags'

------------------------------------------------------------------------------
g:gen_tags#ctags_opts                            *g:gen_tags#ctags_opts*

Set ctags options. The `-R` is set by default,
so there is no need to add `-R` in `g:gen_tags#ctags_opts`.
The default `g:gen_tags#ctags_opts` is '', you need to set it in your vimrc

------------------------------------------------------------------------------
g:gen_tags#ctags_use_cache_dir             *g:gen_tags#ctags_use_cache_dir*

**This option only works for git-repo.**
Set the path of ctags tags. If this variable is set to 1,
`gen_tags.vim` will use project direcotry to store ctags tags.
The default `g:gen_tags#ctags_use_cache_dir` is 1, you need to set it in  your vimrc.

0:
  git repo: `<project folder>/.git/tags_dir`
  non-git: `$HOME/.cache/tags_dir/<project name>`

1:
  `$HOME/.cache/tags_dir/<project name>`

------------------------------------------------------------------------------
g:gen_tags#gtags_split                           *g:gen_tags#gtags_split*

Set gtags find display behavior.
The default `g:gtags_split` is ''
  '' means don't split the display.
  'h' means horizontal splitting.
  'v' means vertical splitting.

------------------------------------------------------------------------------
g:gen_tags#ctags_auto_gen                       *g:gen_tags#ctags_auto_gen*

Auto generate ctags when this variable is 1 and current file belongs to
a git repo
The default `g:gen_tags#ctags_auto_gen` is 0

------------------------------------------------------------------------------
g:gen_tags#gtags_auto_gen                       *g:gen_tags#gtags_auto_gen*

Auto generate gtags when this variable is 1 and current file belongs to
a git repo.
The default `g:gen_tags#gtags_auto_gen` is 0

------------------------------------------------------------------------------
g:gen_tags#verbose                              *g:gen_tags#verbose*

Verbose mode to echo some message.
The default `g:gen_tags#verbose` is 0

------------------------------------------------------------------------------
vim:tw=78:ts=8:ft=help:norl:
